# Use postgres/example user/password credentials
version: "3.4"

services:
  postgres:
    image: postgres:12.5-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    restart: always
    healthcheck:
      test: echo "SELECT 1" | psql --username postgres --quiet --no-align --tuples-only | grep -q 1 || exit 1
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 10s

  redis:
    image: library/redis:5.0-alpine
    command: redis-server --port 6380 --appendonly yes
    healthcheck:
      test: redis-cli -h localhost -p 6380 ping | grep -q PONG || exit 1
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 10s
   
  build:
    image: elixir:1.12.3-alpine
    command: ci/build.sh
    environment:
      APP_VERSION: "${APP_VERSION}"
      APP_NAME: "${APP_NAME}"
      HOME: /tmp # CURRENT_UID doesn't have a home
      MIX_ENV: prod
      MIX_HOME: /code/.mix
    user: ${CURRENT_UID-0:0}
    working_dir: /code
    volumes:
      - "${PROJECT_DIR}:/code"
  
  test:
    image: elixir:1.12.3-alpine
    command: ci/test.sh
    environment:
      HOME: /tmp # CURRENT_UID doesn't have a home
      MIX_ENV: test
      MIX_HOME: /code/.mix
    working_dir: /code
    user: ${CURRENT_UID-0:0}
    volumes:
      - "${PROJECT_DIR}:/code"
    depends_on:
      - postgres
      - redis

  redis_prod:
    image: library/redis:5.0-alpine
    command: redis-server --port 6379 --appendonly yes
    healthcheck:
      test: redis-cli -h localhost -p 6379 ping | grep -q PONG || exit 1
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 10s

  service:
    image: ${APP_NAME}:${APP_VERSION}
    environment:
      DB_HOST: postgres
      DB_NAME: postgres
      DB_PASSWORD: postgres
      DB_USER: postgres
      REDIS_HOST: redis
      REDIS_PORT: "6379"
    depends_on:
      - postgres
      - redis_prod
    ports:
      - 4000:4000
